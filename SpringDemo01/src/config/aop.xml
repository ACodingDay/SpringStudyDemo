<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 目标类 -->
    <bean id="userService" class="com.study.aop.UserServiceImpl"/>
    <!-- 前置通知类 -->
    <bean id="log" class="com.study.aop.Log"/>
    <!-- 后置通知类 -->
    <bean id="afterLog" class="com.study.aop.AfterLog"/>
    <!-- 自定义通知类 -->
    <bean id="customLog" class="com.study.aop.CustomLog"/>
    <!-- 注解通知类 -->
    <bean id="AnLog" class="com.study.aop.AnnotationLog"/>
    <!-- 异常通知目标类 -->
    <bean id="calculatorService" class="com.study.aop.exception.CalculatorImpl"/>
    <!-- 异常通知切面类 -->
    <bean id="excLog" class="com.study.aop.exception.ExceptionLog"/>

    <aop:config>
        <!-- 切面 = 通知+切入点 -->
        <aop:aspect ref="excLog">
            <aop:pointcut id="el" expression="execution(int com.study.aop.exception.CalculatorImpl.*(..))"/>
            <!-- aop:after-throwing:这个是异常通知配置；throwing：异常对象的参数名称 -->
            <aop:after-throwing method="afterThrowing" throwing="ex" pointcut-ref="el"/>
        </aop:aspect>
    </aop:config>

    <!-- 3.使用注解实现AOP -->
    <aop:aspectj-autoproxy/>

    <!-- 2.使用自定义类实现AOP -->
    <aop:config>
        <!-- 这里要写customLog的id -->
        <aop:aspect ref="customLog">
            <aop:pointcut id="pc" expression="execution(* com.study.aop.UserServiceImpl.*(..))"/>
            <!-- 配置前置通知：method 填写customLog的before方法 -->
            <aop:before method="before" pointcut-ref="pc"/>
            <!-- 配置后置通知：method 填写customLog的after方法 -->
            <aop:after method="after" pointcut-ref="pc"/>
        </aop:aspect>
    </aop:config>


    <!-- 1.使用Spring自带接口实现AOP -->
    <aop:config>
        <!-- 表达式中 execution 是固定的，其中 log只对 UserServiceImpl的 add()方法进行切入 -->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.study.aop.UserServiceImpl.add())"/>-->
        <!-- * 表示 UserServiceImpl 的所有无参方法都适用，后面的()表示是无参方法，对有参数的方法不适用 -->
        <!-- 如果想所有的方法都适用，在()中新增.. -->
        <!-- 配置切入点，通知最后增强哪些方法 -->
        <aop:pointcut id="pointcut" expression="execution(* com.study.aop.UserServiceImpl.*(..))"/>
        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>
    </aop:config>
</beans>